{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Loccar Locadora","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do sistema de loca\u00e7\u00e3o de ve\u00edculos.</p> <p>Esta p\u00e1gina apresenta um resumo r\u00e1pido do projeto e caminhos para come\u00e7ar.</p>"},{"location":"#visao-geral","title":"Vis\u00e3o Geral","text":"<ul> <li>Gest\u00e3o de Ve\u00edculos: cadastro, atualiza\u00e7\u00e3o e inativa\u00e7\u00e3o de ve\u00edculos.  </li> <li>Reservas Online: cria\u00e7\u00e3o de reservas com c\u00e1lculo de custos.  </li> <li>Controle Administrativo: devolu\u00e7\u00f5es, multas e relat\u00f3rios financeiros.  </li> </ul>"},{"location":"architecture/","title":"Arquitetura do Sistema","text":"<p>Este documento apresenta a arquitetura inicial do sistema, considerando o uso de Docker, PostgreSQL, .NET backend e Angular frontend.</p>"},{"location":"architecture/#1-visao-geral","title":"1. Vis\u00e3o Geral","text":"<p>O sistema \u00e9 composto por tr\u00eas camadas principais:</p> Camada Tecnologia Responsabilidade Frontend Angular Interface do usu\u00e1rio, consumo das APIs do backend Backend .NET API L\u00f3gica de neg\u00f3cios, APIs REST, integra\u00e7\u00e3o com DB Banco PostgreSQL Armazenamento de dados persistentes"},{"location":"architecture/#2-componentes-do-sistema","title":"2. Componentes do Sistema","text":""},{"location":"architecture/#21-frontend-angular","title":"2.1 Frontend (Angular)","text":"<p>Camadas e Responsabilidades</p>"},{"location":"architecture/#1-core","title":"1. Core","text":"<p>Servi\u00e7os singleton que permanecem durante toda a aplica\u00e7\u00e3o.</p> <p>Autentica\u00e7\u00e3o, interceptadores HTTP, guards de rota.</p> <p>Modelos compartilhados.</p>"},{"location":"architecture/#2-shared","title":"2. Shared","text":"<p>Componentes, pipes e diretivas que podem ser reutilizados em diversos m\u00f3dulos.</p> <p>N\u00e3o deve conter depend\u00eancias de servi\u00e7os espec\u00edficos do m\u00f3dulo.</p>"},{"location":"architecture/#3-features","title":"3. Features","text":"<p>Cada m\u00f3dulo representa uma funcionalidade do sistema.</p> <p>Componentes, servi\u00e7os e rotas encapsulados por m\u00f3dulo.</p> <p>Lazy loading para otimizar carregamento.</p>"},{"location":"architecture/#4-routing","title":"4. Routing","text":"<p>app-routing.module.ts define rotas principais e m\u00f3dulos carregados sob demanda.</p> <p>Cada feature pode ter seu pr\u00f3prio routing module para encapsular rotas espec\u00edficas.</p>"},{"location":"architecture/#5-assets-e-environments","title":"5. Assets e Environments","text":"<p>assets/: imagens, \u00edcones, fontes e arquivos est\u00e1ticos.</p> <p>environments/: configura\u00e7\u00f5es espec\u00edficas para dev/prod (API endpoints, flags).</p>"},{"location":"architecture/#22-backend-net","title":"2.2 Backend (.NET)","text":""},{"location":"architecture/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Este documento descreve a arquitetura do sistema Loccar, estruturado em camadas para garantir separa\u00e7\u00e3o de responsabilidades, escalabilidade e facilidade de manuten\u00e7\u00e3o. O backend \u00e9 desenvolvido em .NET e utiliza os seguintes m\u00f3dulos principais:</p> <ul> <li>WebAPI</li> <li>Application</li> <li>Domain</li> <li>Infra</li> <li>Tests</li> </ul>"},{"location":"architecture/#camadas-da-arquitetura","title":"Camadas da Arquitetura","text":""},{"location":"architecture/#1-webapi","title":"1. WebAPI","text":"<ul> <li>Respons\u00e1vel por expor os endpoints HTTP do sistema.</li> <li>Faz a comunica\u00e7\u00e3o com os clientes (front-end, mobile ou integra\u00e7\u00f5es externas).</li> <li>Implementa controllers que recebem as requisi\u00e7\u00f5es e delegam a l\u00f3gica de neg\u00f3cio para a camada Application.</li> <li>Realiza a autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o e tratamento das respostas (status code, mensagens).</li> </ul>"},{"location":"architecture/#2-application","title":"2. Application","text":"<ul> <li>Cont\u00e9m a l\u00f3gica de casos de uso e regras de aplica\u00e7\u00e3o.</li> <li>Orquestra a intera\u00e7\u00e3o entre WebAPI e Domain.</li> <li>Implementa services e DTOs (Data Transfer Objects) para trafegar dados entre camadas.</li> <li>Centraliza regras de valida\u00e7\u00e3o de fluxos do sistema.</li> </ul>"},{"location":"architecture/#3-domain","title":"3. Domain","text":"<ul> <li>N\u00facleo da aplica\u00e7\u00e3o, contendo a l\u00f3gica de neg\u00f3cio pura.</li> <li>Define as entidades, agregados, value objects e interfaces.</li> <li>N\u00e3o depende de nenhuma tecnologia externa, garantindo independ\u00eancia e reutiliza\u00e7\u00e3o.</li> <li>Utiliza eventos de dom\u00ednio e regras que refletem a realidade do neg\u00f3cio.</li> </ul>"},{"location":"architecture/#4-infra","title":"4. Infra","text":"<ul> <li>Implementa detalhes t\u00e9cnicos e de infraestrutura.</li> <li>Cont\u00e9m o ORM (ex.: Entity Framework Core) e mapeamentos para o banco de dados.</li> <li>Define os reposit\u00f3rios concretos, servi\u00e7os externos (pagamentos, autentica\u00e7\u00e3o, etc.) e configura\u00e7\u00f5es.</li> <li>Se comunica diretamente com o banco de dados e servi\u00e7os externos.</li> </ul>"},{"location":"architecture/#5-tests","title":"5. Tests","text":"<ul> <li>Respons\u00e1vel pelos testes automatizados do sistema.</li> <li>Inclui testes unit\u00e1rios, de integra\u00e7\u00e3o e end-to-end.</li> <li>Garante a qualidade e evita regress\u00f5es no c\u00f3digo.</li> <li>Testa principalmente a camada Domain (unidade) e Application (integra\u00e7\u00e3o).</li> </ul>"},{"location":"architecture/#23-banco-de-dados-postgresql","title":"2.3 Banco de Dados (PostgreSQL)","text":"<ul> <li>Armazena informa\u00e7\u00f5es persistentes:</li> <li>Usu\u00e1rios e credenciais.</li> <li>Eventos e categorias.</li> <li>Prefer\u00eancias do usu\u00e1rio.</li> <li>Executa em container Docker.</li> </ul>"},{"location":"backlog/","title":"Backlog Prioritizado","text":"<p>Este documento apresenta o backlog do projeto, priorizado de acordo com a import\u00e2ncia de cada funcionalidade. As funcionalidades est\u00e3o divididas em Must Have, Should Have e Could Have.</p>"},{"location":"backlog/#must-have-obrigatorias","title":"Must Have (Obrigat\u00f3rias)","text":"ID User Story Prioridade Status US01 Como Cliente, quero cadastrar-me no sistema para que eu possa acessar minhas informa\u00e7\u00f5es e utilizar os servi\u00e7os. Alta Conclu\u00eddo US02 Como Cliente, quero fazer login/logout para que eu possa acessar o sistema de forma segura. Alta Conclu\u00eddo US03 Como Cliente, quero consultar ve\u00edculos dispon\u00edveis para que eu possa escolher um carro para reserva. Alta Pendente US04 Como Cliente, quero calcular custo total da reserva para que eu possa planejar meus gastos. Alta Pendente US05 Como Cliente, quero reservar ve\u00edculo online para que eu garanta a disponibilidade do carro desejado. Alta Pendente US06 Como Funcion\u00e1rio, quero registrar devolu\u00e7\u00e3o de ve\u00edculos para que eu mantenha o controle da frota. Alta Pendente US07 Como Funcion\u00e1rio, quero aplicar multas por atraso para que eu cobre os clientes conforme regras da locadora. Alta Pendente US08 Como Administrador, quero cadastrar novos ve\u00edculos para que eu amplie a frota da locadora. Alta Pendente US09 Como Administrador, quero inativar ve\u00edculos em manuten\u00e7\u00e3o para que eu impe\u00e7a reservas em carros indispon\u00edveis. Alta Pendente"},{"location":"backlog/#should-have-importantes","title":"Should Have (Importantes)","text":"ID User Story Prioridade Status US10 Como Cliente, quero cancelar reserva para que eu possa desistir de uma loca\u00e7\u00e3o sem complica\u00e7\u00f5es. M\u00e9dia Pendente US11 Como Cliente, quero consultar hist\u00f3rico de reservas para que eu acompanhe minhas loca\u00e7\u00f5es anteriores. M\u00e9dia Pendente US12 Como Funcion\u00e1rio, quero cadastrar clientes manualmente para que eu possa incluir reservas presenciais. M\u00e9dia Pendente US13 Como Funcion\u00e1rio, quero registrar danos na devolu\u00e7\u00e3o para que eu tenha controle sobre avarias nos ve\u00edculos. M\u00e9dia Pendente US14 Como Administrador, quero gerenciar usu\u00e1rios para que eu organize permiss\u00f5es e acessos ao sistema. M\u00e9dia Pendente"},{"location":"backlog/#could-have-desejaveis","title":"Could Have (Desej\u00e1veis)","text":"ID User Story Prioridade Status US15 Como Cliente, quero filtrar ve\u00edculos por categoria para que eu encontre mais r\u00e1pido o carro desejado. Baixa Pendente US16 Como Cliente, quero receber confirma\u00e7\u00e3o por e-mail para que eu tenha seguran\u00e7a da minha reserva. Baixa Pendente US17 Como Funcion\u00e1rio, quero visualizar reservas ativas para que eu acompanhe em tempo real as loca\u00e7\u00f5es em andamento. Baixa Pendente"},{"location":"diagrama-classes/","title":"Diagrama UML - Sistema de Loca\u00e7\u00e3o de Ve\u00edculos","text":"<p>Este documento apresenta o diagrama de classes UML do sistema de loca\u00e7\u00e3o de ve\u00edculos, incluindo:</p> <ul> <li>Classes principais: Locat\u00e1rio, Reserva, Ve\u00edculo  </li> <li>Especializa\u00e7\u00f5es de Ve\u00edculos: Ve\u00edculo de Carga, Ve\u00edculo de Passeio, Ve\u00edculo de Passageiros, Motocicleta  </li> <li>Relacionamentos: como as classes se conectam e interagem no sistema</li> </ul>"},{"location":"diagrama-classes/#diagrama-de-classes","title":"Diagrama de Classes","text":"![Diagrama de Classes](DiagramaClassesLoccar.jpg)"},{"location":"diagrama-classes/#descricao-das-classes","title":"Descri\u00e7\u00e3o das Classes","text":""},{"location":"diagrama-classes/#locatario","title":"Locat\u00e1rio","text":"<p>Representa o cliente que realiza reservas. - Atributos principais: id, email, telefone, CNH, data de cria\u00e7\u00e3o - Fun\u00e7\u00f5es principais:    - <code>cadastrar()</code>   - <code>atualizarDados()</code>   - <code>consultarReservas()</code></p>"},{"location":"diagrama-classes/#reserva","title":"Reserva","text":"<p>Representa uma reserva de ve\u00edculo realizada por um locat\u00e1rio. - Atributos principais: n\u00famero da reserva, datas e horas de loca\u00e7\u00e3o e entrega, di\u00e1rias, valores de di\u00e1rias e seguros - Fun\u00e7\u00f5es principais:    - <code>calcularValorTotal()</code>   - <code>confirmarReserva()</code>   - <code>cancelarReserva()</code></p>"},{"location":"diagrama-classes/#veiculo","title":"Ve\u00edculo","text":"<p>Classe base para todos os tipos de ve\u00edculos. - Atributos principais: id, marca, modelo, ano, renavam, capacidade do tanque, valores de di\u00e1rias - Fun\u00e7\u00f5es principais:    - <code>verDisponibilidade()</code>   - <code>calcularPrecoDiaria(tipo)</code>   - <code>registrarManutencao()</code></p>"},{"location":"diagrama-classes/#especializacoes-de-veiculos","title":"Especializa\u00e7\u00f5es de Ve\u00edculos","text":"<ul> <li>Ve\u00edculo de Carga: capacidade de carga, tipo de carga, tara, tamanho do compartimento   Fun\u00e7\u00e3o: <code>carregar(carga)</code></li> <li>Ve\u00edculo de Passeio: categoria, autom\u00e1tico, dire\u00e7\u00e3o hidr\u00e1ulica, ar-condicionado   Fun\u00e7\u00f5es: <code>ativarArCondicionado()</code>, <code>trocarMarchaAutomatico()</code></li> <li>Ve\u00edculo de Passageiro: capacidade de passageiros, televis\u00e3o, ar-condicionado, dire\u00e7\u00e3o hidr\u00e1ulica   Fun\u00e7\u00f5es: <code>ligarTelevisao()</code>, <code>regularArCondicionado()</code></li> <li>Motocicleta: controle de tra\u00e7\u00e3o, freio ABS, piloto autom\u00e1tico   Fun\u00e7\u00f5es: <code>ativarControleTracao()</code>, <code>ativarPilotoAutomatico()</code></li> </ul>"},{"location":"diagrama-classes/#relacionamentos","title":"Relacionamentos","text":"<ul> <li>Um Locat\u00e1rio pode fazer m\u00faltiplas reservas.  </li> <li>Uma Reserva est\u00e1 associada a um ou mais ve\u00edculos.  </li> <li>A classe Ve\u00edculo possui especializa\u00e7\u00f5es (Carga, Passeio, Passageiro e Motocicleta), que herdam seus atributos e comportamentos.</li> </ul>"},{"location":"user-stories/","title":"User Stories","text":"<p>Este documento lista todas as User Stories (US) levantadas para o projeto.</p>"},{"location":"user-stories/#us01","title":"US01","text":"<p>Como Cliente, Quero Cadastrar-se no sistema, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us02","title":"US02","text":"<p>Como Cliente, Quero Fazer login/logout, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us03","title":"US03","text":"<p>Como Cliente, Quero Consultar ve\u00edculos dispon\u00edveis, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us04","title":"US04","text":"<p>Como Cliente, Quero Calcular custo total da reserva, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us05","title":"US05","text":"<p>Como Cliente, Quero Reservar ve\u00edculo online, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us06","title":"US06","text":"<p>Como Funcion\u00e1rio, Quero Registrar devolu\u00e7\u00e3o de ve\u00edculos, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us07","title":"US07","text":"<p>Como Funcion\u00e1rio, Quero Aplicar multas por atraso, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us08","title":"US08","text":"<p>Como Administrador, Quero Cadastrar novos ve\u00edculos, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us09","title":"US09","text":"<p>Como Administrador, Quero Inativar ve\u00edculos em manuten\u00e7\u00e3o, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Must Have</p>"},{"location":"user-stories/#us10","title":"US10","text":"<p>Como Cliente, Quero Cancelar reserva, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Should Have</p>"},{"location":"user-stories/#us11","title":"US11","text":"<p>Como Cliente, Quero Consultar hist\u00f3rico de reservas, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Should Have</p>"},{"location":"user-stories/#us12","title":"US12","text":"<p>Como Funcion\u00e1rio, Quero Cadastrar clientes manualmente, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Should Have</p>"},{"location":"user-stories/#us13","title":"US13","text":"<p>Como Funcion\u00e1rio, Quero Registrar danos na devolu\u00e7\u00e3o, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Should Have</p>"},{"location":"user-stories/#us14","title":"US14","text":"<p>Como Administrador, Quero Gerenciar usu\u00e1rios, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Should Have</p>"},{"location":"user-stories/#us15","title":"US15","text":"<p>Como Cliente, Quero Filtrar ve\u00edculos por categoria, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Could Have</p>"},{"location":"user-stories/#us16","title":"US16","text":"<p>Como Cliente, Quero Receber confirma\u00e7\u00e3o por e-mail, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Could Have</p>"},{"location":"user-stories/#us17","title":"US17","text":"<p>Como Funcion\u00e1rio, Quero Visualizar reservas ativas, Para que eu possa cumprir minha necessidade no sistema. Prioridade: Could Have</p>"}]}